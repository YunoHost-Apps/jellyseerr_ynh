#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service="$app" --action="stop"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression "Ensuring downward compatibility..."

ynh_print_info "Adding an API_KEY if not set..."

ynh_app_setting_set_default --app=$app --key="api_key" --value="$(ynh_string_random --length=32)"
api_key=$(ynh_app_setting_get --app=$app --key=api_key)

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression "Installing dependencies..."

ynh_nodejs_install

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Upgrading source files..."

# Download, check integrity, uncompress and patch the source from manifest.toml
ynh_setup_source --dest_dir="$install_dir" --full_replace --keep="config"

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression "Updating configuration..."

ynh_config_add --template="jellyseerr.conf" --destination="$install_dir/jellyseerr.conf"

chmod 600 "$install_dir/jellyseerr.conf"
chown $app:$app "$install_dir/jellyseerr.conf"

#=================================================
# REAPPLY SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Upgrading system configurations related to $app..."

# Create a dedicated NGINX config using the conf/nginx.conf template
ynh_config_add_nginx

# Create a dedicated systemd config
ynh_config_add_systemd
yunohost service add "$app" --log="/var/log/$app/$app.log"

# Use logrotate to manage application logfile(s)
ynh_config_add_logrotate
touch /var/log/$app/$app.log

#=================================================
# BUILD APP
#=================================================
ynh_script_progression "Building App... This may take quiet some time"

pushd $install_dir
	export CYPRESS_INSTALL_BINARY=0
    ynh_hide_warnings corepack enable
    ynh_hide_warnings npm install -g corepack@latest
    ynh_hide_warnings ynh_exec_as_app corepack prepare pnpm@9 --activate
    ynh_hide_warnings ynh_exec_as_app pnpm i
    export CYPRESS_INSTALL_BINARY=0
    ynh_hide_warnings ynh_exec_as_app NODE_OPTIONS="--max-old-space-size=3000" pnpm install --frozen-lockfile
	ynh_hide_warnings ynh_exec_as_app NODE_OPTIONS="--max-old-space-size=3000" pnpm build

    #remove unneeded files
    ynh_hide_warnings ynh_exec_as_app pnpm prune --prod --ignore-scripts
    ynh_safe_rm src
    ynh_safe_rm server
    ynh_safe_rm .next/cache
popd

chown -R $app:$app "$install_dir"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

# Start a systemd service
ynh_systemctl --service="$app" --action="start"  --wait_until="Server ready on port" --log_path="/var/log/$app/$app.log"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
